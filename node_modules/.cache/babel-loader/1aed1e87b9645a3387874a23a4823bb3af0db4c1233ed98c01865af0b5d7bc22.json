{"ast":null,"code":"import _objectSpread from\"/Users/troshin/dev/Membrana2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/troshin/dev/Membrana2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import classNames from'classnames';import Styles from'./CheckBox.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";var CheckBox=function CheckBox(_ref){var _ref$ariaLabel=_ref.ariaLabel,ariaLabel=_ref$ariaLabel===void 0?'':_ref$ariaLabel,id=_ref.id,register=_ref.register;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isChecked=_useState2[0],setIsChecked=_useState2[1];return/*#__PURE__*/_jsx(\"div\",{className:Styles.CheckBox,children:/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({\"aria-label\":ariaLabel,type:\"checkbox\",checked:isChecked,id:id},register(id)),{},{onChange:function onChange(){return setIsChecked(function(prev){return!prev;});}}))});};export default CheckBox;","map":{"version":3,"names":["React","useState","useEffect","classNames","Styles","jsx","_jsx","CheckBox","_ref","_ref$ariaLabel","ariaLabel","id","register","_useState","_useState2","_slicedToArray","isChecked","setIsChecked","className","children","_objectSpread","type","checked","onChange","prev"],"sources":["/Users/troshin/dev/Membrana2/src/components/ui/CheckBox/CheckBox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport Styles from './CheckBox.module.scss';\n\nconst CheckBox = ({ ariaLabel = '', id, register }) => {\n    const [isChecked, setIsChecked] = useState(false);\n\n    return (\n        <div className={Styles.CheckBox}>\n            <input\n                aria-label={ariaLabel}\n                type='checkbox'\n                checked={isChecked}\n                id={id}\n                {...register(id)}\n                onChange={() => setIsChecked((prev) => !prev)}\n            />\n\n        </div>\n    );\n};\n\nexport default CheckBox;"],"mappings":"mOAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,YAAY,CAEnC,MAAO,CAAAC,MAAM,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAAC,IAAA,CAAyC,KAAAC,cAAA,CAAAD,IAAA,CAAnCE,SAAS,CAATA,SAAS,CAAAD,cAAA,UAAG,EAAE,CAAAA,cAAA,CAAEE,EAAE,CAAAH,IAAA,CAAFG,EAAE,CAAEC,QAAQ,CAAAJ,IAAA,CAARI,QAAQ,CAC5C,IAAAC,SAAA,CAAkCZ,QAAQ,CAAC,KAAK,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA1CG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9B,mBACIR,IAAA,QAAKY,SAAS,CAAEd,MAAM,CAACG,QAAS,CAAAY,QAAA,cAC5Bb,IAAA,SAAAc,aAAA,CAAAA,aAAA,EACI,aAAYV,SAAU,CACtBW,IAAI,CAAC,UAAU,CACfC,OAAO,CAAEN,SAAU,CACnBL,EAAE,CAAEA,EAAG,EACHC,QAAQ,CAACD,EAAE,CAAC,MAChBY,QAAQ,CAAE,SAAAA,SAAA,QAAM,CAAAN,YAAY,CAAC,SAACO,IAAI,QAAK,CAACA,IAAI,GAAC,EAAC,EACjD,CAAC,CAED,CAAC,CAEd,CAAC,CAED,cAAe,CAAAjB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}